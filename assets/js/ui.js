// User Interface - adjust appearance of various elements within
// the DOM in response to user activity

$(document).ready(function() {
  side_nav_button.click(function() {
    $("body").scrollTop(0);
    reset_dashboard();

    // Set the background colour of the tube line that was clicked
    // to show the currently active tube line. Need to do this for both desktop
    // and mobile to ensure that the current navigation state is clear across all devices

    $(this).addClass("active");
    $(this).siblings().removeClass("active");
    mobile_menu_button.removeClass("active");
    $(".mob-menu .sidebar-button[data-lineid='" + $(this).attr("data-lineid") + "']").addClass('active');

    // Style the map and graph place holder icons so that they match the current tube line colour

    dashboard_content.find(".placeholder-icon").fadeOut(0);
    dashboard_content.find(".placeholder-icon").addClass("placeholder-icon-" + $(this).attr("data-lineid"));
    dashboard_content.find(".placeholder-icon").fadeIn("slow");

    // Clear out and re-populate the drop down list of stations
    // according to the tube line selected by the user

    station_dropdown_container.empty();
    fetchTFLdata($(this).attr("data-lineid"));
  });

  mobile_menu_button.click(function() {
    $("body").scrollTop(0);
    reset_dashboard();

    // Set the background colour of the tube line that was clicked
    // to show the currently active tube line. Need to do this for both desktop
    // and mobile to ensure that the current navigation state is clear across all devices

    mobile_menu_button.removeClass("active");
    $(this).addClass("active");
    $(".navbar-toggler").click();
    side_nav.children(".sidebar-button").removeClass("active");
    side_nav.children(".sidebar-button[data-lineid='" + $(this).attr("data-lineid") + "']").addClass('active');

    // Style the map and graph place holder icons so that they match the current tube line colour

    $(".dashboard-content").find(".placeholder-icon").addClass("placeholder-icon-" + $(this).attr("data-lineid"));

    // Clear out and re-populate the drop down list of stations
    // according to the tube line selected by the user

    station_dropdown_container.empty();
    fetchTFLdata($(this).attr("data-lineid"));
  });

  // Graphs generated by d3/dc are not responsive - this helps remedy that
  // by resizing SVGs to their parent div width

  function resize_svg() {
    if ($("#station_dropdown option:selected").val() != "0" && $("#loading").is(':empty')) {
      $(".chart").each(function() {
          var graph_width = $(this).outerWidth() - 20;
          $(this).children("div:first").width(graph_width);
          $(this).children("div:first svg").width(graph_width);
      });
      reset_titles();
      dc.renderAll();
      load_titles_styles();
    }
  }

  $(window).resize(function() {
    resize_svg();
  });

  // Bakerloo is selected by default when the page is loaded so we need to
  // fetch the stops on that line in order to populate the stations drop down

  fetchTFLdata("bakerloo");
});

function clear_divs() {
  loading.empty();
  pie_chart.empty();
  line_chart.empty();
  map.empty();
  $("#crime-selector").empty();
  $("#force-selector").empty();
}

function reset_dashboard() {
  clear_divs();
  pie_chart.html(`<i class="fas fa-chart-pie placeholder-icon"></i>`);
  line_chart.html(`<i class="fas fa-chart-area placeholder-icon"></i>`);
  map.html(`<i class="fas fa-map-marker-alt placeholder-icon"></i>`);
}

function refresh_dashboard_content() {

  // Need to re-instatiate station drop down as it has been cleared and re-populated
  // since the page was loaded

  const station_dropdown = $("#station_dropdown");

  if (station_dropdown.val() != "0") {
    $("body").scrollTop(0);

    // Determine coordinates of the tube station

    lat = parseFloat(station_dropdown.find('option:selected').attr("lat"));
    lon = parseFloat(station_dropdown.find('option:selected').attr("lon"));

    // Clear graphs
    
    clear_divs();
    loading.html(`<img src="assets/images/loading.gif" width="100" />`);

    // Render the map but only if we have a valid set of coordinates.
    // If not, then don't bother to attempt fetching any data and report the issue to the user

    initMap(lat, lon, `Location not found (either lattitude or longitude is not a number)`);
    if (lat == null || lon == null || isNaN(lat) || isNaN(lon)) {
      loading.empty();
    } else {
      // Get Street Crime data and render graphs, referencing tube line colour for the line chart

      line_chart_colour = $(".dashboard-sidebar .sidebar-button.active").css("background-color");
      var street_crimes = fetchStreetCrimeData(lat, lon, line_chart_colour);
    }
  }
}

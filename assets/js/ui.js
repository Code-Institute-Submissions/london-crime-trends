// User Interface - adjust appearance of various elements within
// the DOM in response to user activity

// Reduce DOM queries by caching elements that are referenced several times
const mobile_menu_button = $(".mob-menu .sidebar-button");
const side_nav_button = $(".dashboard-sidebar .sidebar-button");
const side_nav = $(".dashboard-sidebar");
const dashboard_content =  $(".dashboard-content");
const station_dropdown_container = $("#stops");
const header = $("header");
const footer = $("footer");
const main = $("main");
const pie_chart = $("#pie-chart");
const line_chart = $("#line-chart");
const map = $("#map");
const station_dropdown = $("#station_dropdown");
const loading = $("#loading");

$(document).ready(function() {
  side_nav_button.click(function() {
    $("body").scrollTop(0);
    reset_dashboard();
    // Set the background colour of the tube line that was clicked
    // to show the currently active tube line. Need to do this for both desktop
    // and mobile to ensure that the current navigation state is clear across all devices
    $(this).addClass("active");
    $(this).siblings().removeClass("active");
    mobile_menu_button.removeClass("active");
    $(".mob-menu .sidebar-button[data-lineid='" + $(this).attr("data-lineid") + "']").addClass('active');
    // Style the map and graph place holder icons so that they match the current tube line colour
    dashboard_content.find(".placeholder-icon").fadeOut(0);
    dashboard_content.find(".placeholder-icon").addClass("placeholder-icon-" + $(this).attr("data-lineid"));
    dashboard_content.find(".placeholder-icon").fadeIn("slow");
    // Clear out and re-populate the drop down list of stations
    // according to the tube line selected by the user
    station_dropdown_container.empty();
    fetchTFLdata($(this).attr("data-lineid"));
  });

  mobile_menu_button.click(function() {
    $("body").scrollTop(0);
    reset_dashboard();
    // Set the background colour of the tube line that was clicked
    // to show the currently active tube line. Need to do this for both desktop
    // and mobile to ensure that the current navigation state is clear across all devices
    mobile_menu_button.removeClass("active");
    $(this).addClass("active");
    $(".navbar-toggler").click();
    side_nav.children(".sidebar-button").removeClass("active");
    side_nav.children(".sidebar-button[data-lineid='" + $(this).attr("data-lineid") + "']").addClass('active');
    // Style the map and graph place holder icons so that they match the current tube line colour
    $(".dashboard-content").find(".placeholder-icon").addClass("placeholder-icon-" + $(this).attr("data-lineid"));
    // Clear out and re-populate the drop down list of stations
    // according to the tube line selected by the user
    station_dropdown_container.empty();
    fetchTFLdata($(this).attr("data-lineid"));
  });

  var num_lines = side_nav_button.length;
  var div_width = (1/num_lines) * 100;

  for (i = 0; i < num_lines; i++) {
    footer.prepend(`<div class="footer-tops f` + i + `" style="width:` + div_width + `%"></div>`);
  }

  var min_content_height = $(window).height() - header.outerHeight() - footer.outerHeight();
  main.css("min-height",min_content_height+"px");

  // Graphs generated by d3/dc are not responsive - this helps remedy that
  // by resizing SVGs to their parent div width
  function resize_svg() {
    if ($("#station_dropdown option:selected").val() != "0" && $("#loading").is(':empty')) {
      $(".chart").each(function() {
          var graph_width = $(this).outerWidth() - 20;
          $(this).children("div:first").width(graph_width);
          $(this).children("div:first svg").width(graph_width);
      });
      reset_titles();
      dc.renderAll();
      load_titles_styles();
    }
  }

  $(window).resize(function() {
    resize_svg();
    var min_content_height = $(window).height() - header.outerHeight() - footer.outerHeight();
    main.css("min-height",min_content_height+"px");
  });

  // Bakerloo is selected by default when the page is loaded so we need to
  // fetch the stops on that line in order to populate the stations drop down
  fetchTFLdata("bakerloo");
});

function clear_divs() {
  $("#loading").empty();
  $("#crime-selector").empty();
  $("#force-selector").empty();
  $("#pie-chart").empty();
  $("#line-chart").empty();
  $("#map").empty();
}

function reset_dashboard() {
  clear_divs();
  pie_chart.html(`<i class="fas fa-chart-pie placeholder-icon"></i>`);
  line_chart.html(`<i class="fas fa-chart-area placeholder-icon"></i>`);
  map.html(`<i class="fas fa-map-marker-alt placeholder-icon"></i>`);
}

function refresh_dashboard_content() {
  if (station_dropdown.val() != "0") {
    $("body").scrollTop(0);
    // Determine coordinates of the tube station
    lat = parseFloat($("#station_dropdown").find('option:selected').attr("lat"));
    lon = parseFloat($("#station_dropdown").find('option:selected').attr("lon"));
    // Clear graphs
    clear_divs();
    loading.html(`<img src="assets/images/loading.gif" width="100" />`);
    // Render the map but only if we have a valid set of coordinates.
    // If not, then don't bother to attempt fetching any data and report the issue to the user
    initMap(lat, lon, `<h4>Location not found (either lattitude or longitude is not a number)</h4>`);
    if (lat == null || lon == null || isNaN(lat) || isNaN(lon)) {
      $("#loading").empty();
    } else {
      // Get Street Crime data and render graphs, referencing tube line colour for the line chart
      col = $(".dashboard-sidebar .sidebar-button.active").css("background-color");
      var street_crimes = fetchStreetCrimeData(lat, lon, col);
    }
  }
}
